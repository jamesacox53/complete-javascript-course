{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAuC,AAAvC,qCAAuC;AAEvC,EAAqC,AAArC,mCAAqC;AAErC,KAAK,CAAC,UAAU,oBAAqB,CAAC;IAEpC,GAAG,CAAC,CAAC;QACH,EAAwG,AAAxG,sGAAwG;QACxG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,yEAAyE;QAElG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAE3B,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAE7D,KAAK,CAAC,MAAM,GAAG,mBAAmB,CAAC,IAAI;QAEvC,aAAa,CAAC,MAAM;IAEtB,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;QACf,KAAK,CAAC,KAAK;IACb,CAAC;AACH,CAAC;AAED,KAAK,CAAC,mBAAmB,GAAG,QAAQ,CAAE,IAAI,EAAE,CAAC;IAE3C,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;IAEnC,KAAK,CAAC,MAAM,GAAG,CAAC;QAEd,EAAE,EAAE,UAAU,CAAC,EAAE;QACjB,KAAK,EAAE,UAAU,CAAC,KAAK;QACvB,SAAS,EAAE,UAAU,CAAC,SAAS;QAC/B,SAAS,EAAE,UAAU,CAAC,UAAU;QAChC,KAAK,EAAE,UAAU,CAAC,SAAS;QAC3B,QAAQ,EAAE,UAAU,CAAC,QAAQ;QAC7B,WAAW,EAAE,UAAU,CAAC,YAAY;QACpC,WAAW,EAAE,UAAU,CAAC,WAAW;IACrC,CAAC;IAED,MAAM,CAAC,MAAM;AACf,CAAC;AAED,EAAgC,AAAhC,8BAAgC;AAEhC,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAE,MAAM,EAAE,CAAC;IAEvC,KAAK,CAAC,UAAU,IAAI,iDACF,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,gFAEvC,EAAE,MAAM,CAAC,KAAK,CAAC,0TASsC,EAAE,MAAM,CAAC,WAAW,CAAC,4TAOtB,EAAE,MAAM,CAAC,QAAQ,CAAC,kjCAgC5E,EAAE,uBAAuB,CAAC,MAAM,CAAC,WAAW,EAAE,sRAQd,EAAE,MAAM,CAAC,SAAS,CAAC,4JAK7C,EAAE,MAAM,CAAC,SAAS,CAAC,yOAQvB;IAEZ,eAAe,CAAC,SAAS,GAAG,CAAE;IAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,UAAU;AAC7D,CAAC;AAED,KAAK,CAAC,uBAAuB,GAAG,QAAQ,CAAE,WAAW,EAAE,CAAC;IAEtD,MAAM,CAAC,WAAW,CAAC,GAAG,EAAC,UAAU,GAAI,CAAC;QAEpC,MAAM,EAAE,kKAIsB,EAAE,UAAU,CAAC,QAAQ,CAAC,8EAEvB,EAAE,UAAU,CAAC,IAAI,CAAC,cAC7C,EAAE,UAAU,CAAC,WAAW,CAAC,mBAExB;IACL,CAAC,EAAE,IAAI,CAAC,CAAE;AACZ,CAAC;AAED,UAAU","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\r\n\r\nconst timeout = function (s) {\r\n  return new Promise(function (_, reject) {\r\n    setTimeout(function () {\r\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\r\n    }, s * 1000);\r\n  });\r\n};\r\n\r\n// https://forkify-api.herokuapp.com/v2\r\n\r\n///////////////////////////////////////\r\n\r\n// Lecture: Loading a Recipe from API\r\n\r\nconst showRecipe = async function () {\r\n\r\n  try {\r\n    // const res = await fetch(`https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc958`);\r\n    const res = await fetch(`https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886`);\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    const recipe = _createRecipeObject(data);\r\n\r\n    _renderRecipe(recipe)\r\n\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n}\r\n\r\nconst _createRecipeObject = function (data) {\r\n\r\n  const recipeData = data.data.recipe;\r\n\r\n  const recipe = {\r\n\r\n    id: recipeData.id,\r\n    title: recipeData.title,\r\n    publisher: recipeData.publisher,\r\n    sourceUrl: recipeData.source_url,\r\n    image: recipeData.image_url,\r\n    servings: recipeData.servings,\r\n    cookingTime: recipeData.cooking_time,\r\n    ingredients: recipeData.ingredients,\r\n  };\r\n\r\n  return recipe;\r\n}\r\n\r\n// Lecture: Rendering the Recipe\r\n\r\nconst _renderRecipe = function (recipe) {\r\n\r\n  const recipeHTML = `<figure class=\"recipe__fig\">\r\n          <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\r\n          <h1 class=\"recipe__title\">\r\n            <span>${recipe.title}</span>\r\n          </h1>\r\n        </figure>\r\n\r\n        <div class=\"recipe__details\">\r\n          <div class=\"recipe__info\">\r\n            <svg class=\"recipe__info-icon\">\r\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\r\n            </svg>\r\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\r\n            <span class=\"recipe__info-text\">minutes</span>\r\n          </div>\r\n          <div class=\"recipe__info\">\r\n            <svg class=\"recipe__info-icon\">\r\n              <use href=\"src/img/icons.svg#icon-users\"></use>\r\n            </svg>\r\n            <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\r\n            <span class=\"recipe__info-text\">servings</span>\r\n\r\n            <div class=\"recipe__info-buttons\">\r\n              <button class=\"btn--tiny btn--increase-servings\">\r\n                <svg>\r\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\r\n                </svg>\r\n              </button>\r\n              <button class=\"btn--tiny btn--increase-servings\">\r\n                <svg>\r\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"recipe__user-generated\">\r\n            <svg>\r\n              <use href=\"src/img/icons.svg#icon-user\"></use>\r\n            </svg>\r\n          </div>\r\n          <button class=\"btn--round\">\r\n            <svg class=\"\">\r\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"recipe__ingredients\">\r\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n          <ul class=\"recipe__ingredient-list\">\r\n            ${_getIngredientsListHTML(recipe.ingredients)}\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"recipe__directions\">\r\n          <h2 class=\"heading--2\">How to cook it</h2>\r\n          <p class=\"recipe__directions-text\">\r\n            This recipe was carefully designed and tested by\r\n            <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\r\n            directions at their website.\r\n          </p>\r\n          <a\r\n            class=\"btn--small recipe__btn\"\r\n            href=\"${recipe.sourceUrl}\"\r\n            target=\"_blank\"\r\n          >\r\n            <span>Directions</span>\r\n            <svg class=\"search__icon\">\r\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\r\n            </svg>\r\n          </a>\r\n        </div>`\r\n\r\n  recipeContainer.innerHTML = '';\r\n  recipeContainer.insertAdjacentHTML('afterbegin', recipeHTML);\r\n}\r\n\r\nconst _getIngredientsListHTML = function (ingredients) {\r\n\r\n  return ingredients.map(ingredient => {\r\n\r\n    return `<li class=\"recipe__ingredient\">\r\n    <svg class=\"recipe__icon\">\r\n      <use href=\"src/img/icons.svg#icon-check\"></use>\r\n    </svg>\r\n    <div class=\"recipe__quantity\">${ingredient.quantity}</div>\r\n    <div class=\"recipe__description\">\r\n      <span class=\"recipe__unit\">${ingredient.unit}</span>\r\n      ${ingredient.description}\r\n    </div>\r\n  </li>`;\r\n  }).join('');\r\n}\r\n\r\nshowRecipe();"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}